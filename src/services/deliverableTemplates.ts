
import type { CompiledDeliverable } from './deliverableCompiler'

export interface DeliverableTemplate {
  name: string
  description: string
  generate: (deliverable: CompiledDeliverable) => string
}

export class DeliverableTemplateService {
  static getAvailableTemplates(): DeliverableTemplate[] {
    return [
      {
        name: 'Executive Summary',
        description: 'High-level business overview for stakeholders and investors',
        generate: this.generateExecutiveSummary
      },
      {
        name: 'Technical Specification',
        description: 'Detailed technical requirements and architecture for developers',
        generate: this.generateTechnicalSpec
      },
      {
        name: 'Implementation Guide',
        description: 'Step-by-step roadmap for project execution',
        generate: this.generateImplementationGuide
      },
      {
        name: 'Business Plan',
        description: 'Comprehensive business case with market analysis',
        generate: this.generateBusinessPlan
      }
    ]
  }
  
  static generateExecutiveSummary(deliverable: CompiledDeliverable): string {
    return `# Executive Summary: ${deliverable.projectOverview.name}

## Project Overview
**Problem**: ${deliverable.projectOverview.problemStatement}

**Solution**: ${deliverable.projectOverview.solutionSummary}

**Target Audience**: ${deliverable.projectOverview.targetAudience.join(', ')}

## Key Highlights
- **Market Opportunity**: ${deliverable.marketAnalysis.opportunities.slice(0, 2).join('; ')}
- **Competitive Advantage**: ${deliverable.marketAnalysis.competitiveAdvantages.slice(0, 2).join('; ')}
- **Technical Feasibility**: ${deliverable.qualityMetrics.feasibility}% confidence
- **Market Viability**: ${deliverable.qualityMetrics.marketViability}% confidence

## Implementation Summary
**Timeline**: ${deliverable.implementationPlan.timeline}

**Key Phases**:
${deliverable.implementationPlan.phases.map(phase => 
  `- **${phase.name}** (${phase.duration}): ${phase.deliverables.slice(0, 2).join(', ')}`
).join('\n')}

## Risk Assessment
${deliverable.validationResults.riskAssessment.slice(0, 3).map(risk => `- ${risk}`).join('\n')}

## Immediate Next Steps
${deliverable.nextSteps.immediate.map(step => `1. ${step}`).join('\n')}

## Quality Metrics
- Completeness: ${deliverable.qualityMetrics.completeness}%
- Feasibility: ${deliverable.qualityMetrics.feasibility}%
- Market Viability: ${deliverable.qualityMetrics.marketViability}%
- Technical Readiness: ${deliverable.qualityMetrics.technicalReadiness}%

---
*Generated by Lovable AI Concept Development Platform*`
  }
  
  static generateTechnicalSpec(deliverable: CompiledDeliverable): string {
    return `# Technical Specification: ${deliverable.projectOverview.name}

## Architecture Overview
${deliverable.technicalSpecification.architecture}

## Core Components
${deliverable.technicalSpecification.components.map(comp => `
### ${comp.name}
**Type**: ${comp.type}
**Priority**: ${comp.priority}
**Description**: ${comp.description}
${comp.dependencies.length > 0 ? `**Dependencies**: ${comp.dependencies.join(', ')}` : ''}
${comp.technicalRequirements.length > 0 ? `**Requirements**: ${comp.technicalRequirements.join(', ')}` : ''}
`).join('\n')}

## Technical Requirements
${deliverable.technicalSpecification.technicalRequirements.map(req => `- ${req}`).join('\n')}

## System Integrations
${deliverable.technicalSpecification.integrations.length > 0 
  ? deliverable.technicalSpecification.integrations.map(integration => `- ${integration}`).join('\n')
  : '- No external integrations identified'
}

## Validation Results
### Technical Validation
${deliverable.validationResults.technicalValidation.map(validation => `- ${validation}`).join('\n')}

### Recommendations
${deliverable.validationResults.recommendations.map(rec => `- ${rec}`).join('\n')}

## Development Phases
${deliverable.implementationPlan.phases.map(phase => `
### ${phase.name}
- **Duration**: ${phase.duration}
- **Deliverables**: ${phase.deliverables.join(', ')}
- **Dependencies**: ${phase.dependencies.join(', ')}
`).join('\n')}

## Quality Assessment
- Technical Readiness: ${deliverable.qualityMetrics.technicalReadiness}%
- Feasibility Score: ${deliverable.qualityMetrics.feasibility}%
- Implementation Completeness: ${deliverable.qualityMetrics.completeness}%

---
*Technical Specification generated by Lovable AI*`
  }
  
  static generateImplementationGuide(deliverable: CompiledDeliverable): string {
    return `# Implementation Guide: ${deliverable.projectOverview.name}

## Project Overview
${deliverable.projectOverview.description}

**Problem Being Solved**: ${deliverable.projectOverview.problemStatement}

## Implementation Roadmap

### Phase 1: Foundation
**Timeline**: ${deliverable.implementationPlan.phases[0]?.duration || '4-6 weeks'}
**Objectives**: 
${deliverable.implementationPlan.phases[0]?.deliverables.map(item => `- ${item}`).join('\n') || '- Set up project foundation'}

### Phase 2: Core Development  
**Timeline**: ${deliverable.implementationPlan.phases[1]?.duration || '8-12 weeks'}
**Objectives**:
${deliverable.implementationPlan.phases[1]?.deliverables.map(item => `- ${item}`).join('\n') || '- Develop core functionality'}

### Phase 3: Enhancement
**Timeline**: ${deliverable.implementationPlan.phases[2]?.duration || '4-8 weeks'}
**Objectives**:
${deliverable.implementationPlan.phases[2]?.deliverables.map(item => `- ${item}`).join('\n') || '- Add enhancement features'}

## Resource Requirements
${deliverable.implementationPlan.resources.map(resource => `- ${resource}`).join('\n')}

## Key Milestones
${deliverable.implementationPlan.milestones.map(milestone => `- ${milestone}`).join('\n')}

## Immediate Action Items
${deliverable.nextSteps.immediate.map((step, i) => `${i + 1}. ${step}`).join('\n')}

## Short-term Goals (1-3 months)
${deliverable.nextSteps.shortTerm.map((step, i) => `${i + 1}. ${step}`).join('\n')}

## Long-term Vision (6+ months)
${deliverable.nextSteps.longTerm.map((step, i) => `${i + 1}. ${step}`).join('\n')}

## Risk Mitigation
${deliverable.validationResults.riskAssessment.map(risk => `- **Risk**: ${risk}`).join('\n')}

## Success Metrics
- Project Completeness: ${deliverable.qualityMetrics.completeness}%
- Technical Feasibility: ${deliverable.qualityMetrics.feasibility}%
- Market Readiness: ${deliverable.qualityMetrics.marketViability}%

---
*Implementation Guide generated by Lovable AI*`
  }
  
  static generateBusinessPlan(deliverable: CompiledDeliverable): string {
    return `# Business Plan: ${deliverable.projectOverview.name}

## Executive Summary
${deliverable.projectOverview.description}

### Problem Statement
${deliverable.projectOverview.problemStatement}

### Solution Overview
${deliverable.projectOverview.solutionSummary}

### Target Market
${deliverable.projectOverview.targetAudience.join(', ')}

## Market Analysis
### Market Opportunities
${deliverable.marketAnalysis.opportunities.map(opp => `- ${opp}`).join('\n')}

### Competitive Advantages
${deliverable.marketAnalysis.competitiveAdvantages.map(adv => `- ${adv}`).join('\n')}

### Market Research Findings
${deliverable.marketAnalysis.findings.map(finding => `- ${finding}`).join('\n')}

### Risk Analysis
${deliverable.marketAnalysis.risks.map(risk => `- ${risk}`).join('\n')}

## Product/Service Description
### Core Components
${deliverable.technicalSpecification.components.filter(c => c.priority === 'high').map(comp => `
**${comp.name}**: ${comp.description}
`).join('\n')}

### Technical Architecture
${deliverable.technicalSpecification.architecture}

## Implementation Strategy
### Development Phases
${deliverable.implementationPlan.phases.map((phase, i) => `
#### Phase ${i + 1}: ${phase.name}
- **Duration**: ${phase.duration}
- **Key Deliverables**: ${phase.deliverables.join(', ')}
`).join('\n')}

### Resource Requirements
${deliverable.implementationPlan.resources.map(resource => `- ${resource}`).join('\n')}

### Timeline
**Total Project Duration**: ${deliverable.implementationPlan.timeline}

## Validation & Market Readiness
### Market Validation
${deliverable.validationResults.marketValidation.map(validation => `- ${validation}`).join('\n')}

### Technical Validation
${deliverable.validationResults.technicalValidation.map(validation => `- ${validation}`).join('\n')}

## Next Steps & Milestones
### Immediate Actions (0-30 days)
${deliverable.nextSteps.immediate.map((step, i) => `${i + 1}. ${step}`).join('\n')}

### Short-term Goals (1-6 months)
${deliverable.nextSteps.shortTerm.map((step, i) => `${i + 1}. ${step}`).join('\n')}

### Long-term Vision (6+ months)
${deliverable.nextSteps.longTerm.map((step, i) => `${i + 1}. ${step}`).join('\n')}

## Quality & Confidence Metrics
- Business Viability: ${deliverable.qualityMetrics.marketViability}%
- Technical Feasibility: ${deliverable.qualityMetrics.feasibility}%
- Implementation Readiness: ${deliverable.qualityMetrics.completeness}%
- Innovation Score: ${deliverable.qualityMetrics.technicalReadiness}%

---
*Business Plan generated by Lovable AI Concept Development Platform*`
  }
}
